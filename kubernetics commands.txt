apiVersion: v1
kind: Pod
metadata:
  name: mypod
spec:
  containers:
    - name: cont1
      image: shammu101/dm
      ports:
        - containerPort: 80
========================================
1  vim shammu.sh
    2  vim .bashrc
    3  source .bashrc
    4  kubectl get po
    5  kubectl delete po --all
    6  kubectl get po
    7  vim pod.yml
    8  kubectl api-resources
    9  vim pod.yml
   10  kubectl get po
   11  kubectl create -f pod.yml
   12  kubectl get po
   13  kubectl get po -o wide
   14  vim pod1.yml
   15  kubectl create -f pod1.yml
   16  vim pod1.yml
   17  kubectl get po -o wide
   18  vim pod2.yml
   19  kubectl create -f pod2.yml
   20  kubectl get po
   21  kubectl delete po mypod2
   22  kubectl get po
   23  ls
   24  ll
   25  vim shammu.sh
   26  export KOPS_STATE_STORE=s3://dev.project.devops.k8s.local
   27  vim shammu.sh
   28  kops delete cluster --name dev.k8s.local --yes
   29  vim pod.yml
   30  history
===========================================================
apiVersion: v1
kind: Pod
metadata:
  name: mypod
  labels:
    app: dm
spec:
  containers:
    - name: cont1
      image: shammu101/dm
      ports:
        - containerPort: 80

=====================================
apiVersion: v1
kind: Service
metadata:
  name: mysvc1
spec:
  type: NodePort
  selector:
    app: game
  ports:
    - port: 80
      targetPort: 80

=========================================
root@vm:~# history
    1  apt update -y
    2  apt upgrade -y
    3  curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    4  sudo apt-get update
    5  sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
    6  sudo mkdir -p /etc/apt/keyrings
    7  curl -sLS https://packages.microsoft.com/keys/microsoft.asc |   gpg --dearmor | sudo tee /etc/apt/keyrings/microsoft.gpg > /dev/null
    8  sudo chmod go+r /etc/apt/keyrings/microsoft.gpg
    9  AZ_DIST=$(lsb_release -cs)
   10  echo "Types: deb
URIs: https://packages.microsoft.com/repos/azure-cli/
Suites: ${AZ_DIST}
Components: main
Architectures: $(dpkg --print-architecture)
Signed-by: /etc/apt/keyrings/microsoft.gpg" | sudo tee /etc/apt/sources.list.d/azure-cli.sources
   11  sudo apt-get update
   12  sudo apt-get install azure-cli
   13  sudo snap install kubectl --classic
   14  kubectl version --client
   15  az login
   16  az aks get-credentials --resource-group kops --name kops --overwrite-existing
   17  kubectl get pods
   18  kubectl get pod
   19  kubectl get po
   20  kubectl run mypod --image=shammu101/dm
   21  kunectl get po
   22  kubectl get po
   23  kubectl delete pod mypod
   24  kubectl get po
   25  vim pod.yaml
   26  kubectl api-resources
   27  vim pod.yaml
   28  kubectl create -f pod.yaml
   29  kubectl get po
   30  vim pod1.yml
   31  kubectl create -f pod1.yml
   32  kubectl get po
   33  vim pod2.yml
   34  kubectl create -f pod2.yml
   35  kubectl get po
   36  vim pod.yaml
   37  kubectl apply -f pod.yaml
   38  vim pod1.yml
   39  kubectl apply -f pod1.yml
   40  vim pod1.yml
   41  kubectl apply -f pod1.yml
   42  vim pod2.yml
   43  kubectl apply -f pod2.yml
   44  vim service.yml
   45  kubectl create -f service.yml
   46  vim service.yml
   47  kubectl create -f service.yml
   48  kubectl get svc
   49  kubectl get po -o wide
   50  cat pod.yaml
   51  vim servic2.yml
   52  kubectl create -f servic2.yml
   53  kubectl get svc
   54  cat servic2.yml
   55  ls
   56  cat service.yml
   57  vim service3.yml
   58  kubectl create -f servic3
   59  kubectl create -f service3.yml
   60  vim service3.yml
   61  kubectl create -f service3.yml
   62  kubectl get po -o wide
   63  cat pod.yaml
   64  ls
   65  cat servic2.yml
   66  history
======================================================
vim rs.yml

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: myrs
  labels:
    place: hyd
spec:
  replicas: 7
  selector:
    matchLabels:
      place: hyd
  template:
    metadata:
      labels:
        place: hyd
    spec:
      containers:
        - name: cont1
          image: shammu101/cycle
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mysvc1
spec:
  type: NodePort
  selector:
    place: hyd
  ports:
    - port: 80
      targetPort: 80
      nodePort: 32000

==========================================================

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: myrs2
  labels:
    app: dm
spec:
  replicas: 7
  selector:
    matchLabels:
      app: dm
  template:
    metadata:
      labels:
        app: dm
    spec:
      containers:
        - name: shammu
          image: shammu101/dm
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: svc
spec:
  type: NodePort
  selector:
    app: dm
  ports:
    - port: 80
      targetPort: 80
      nodePort: 31100
===============================================
root@vm:~# history
    1  apt update -y
    2  apt upgrade -y
    3  curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    4  sudo apt-get update
    5  sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
    6  sudo mkdir -p /etc/apt/keyrings
    7  curl -sLS https://packages.microsoft.com/keys/microsoft.asc |   gpg --dearmor | sudo tee /etc/apt/keyrings/microsoft.gpg > /dev/null
    8  sudo chmod go+r /etc/apt/keyrings/microsoft.gpg
    9  AZ_DIST=$(lsb_release -cs)
   10  echo "Types: deb
URIs: https://packages.microsoft.com/repos/azure-cli/
Suites: ${AZ_DIST}
Components: main
Architectures: $(dpkg --print-architecture)
Signed-by: /etc/apt/keyrings/microsoft.gpg" | sudo tee /etc/apt/sources.list.d/azure-cli.sources
   11  sudo apt-get update
   12  sudo apt-get install azure-cli
   13  sudo snap install kubectl --classic
   14  kubectl version --client
   15  az login
   16  az aks get-credentials --resource-group kops --name kops --overwrite-existing
   17  kubectl get po
   18  vim pod.yml
   19  kubectl create -f pod.yml
   20  kubectl get po -o wide
   21  kubectl get svc
   22  kubectl get po -o wide
   23  kubectl get po
   24  kubectl delete po mypod
   25  kubectl get po
   26  vim rs.yaml
   27  kubectl api -resources
   28  kubectl api-resources
   29  vim rs.yaml
   30  kubectl create -f rs.yaml
   31  vim rs.yaml
   32  kubectl create -f rs.yaml
   33  kubectl get rs
   34  kubectl get po
   35  kubectl delete po myrs-xt9f6
   36  kubectl get po
   37  vim rs.yaml
   38  kubectl apply -f rs.yaml
   39  kubectl get svc
   40  vim rs.yaml
   41  kubectl apply -f rs.yaml
   42  kubectl get svc
   43  kubectl get po -o wide
   44  vim rs2.yml
   45  kubectl create -f rs2.yml
   46  kubectl get rs
   47  kubectl get po -o wide
   48  kubectl delete po myrs2-nnf4v
   49  kubectl get po -o wide
   50  vim rs.yaml
   51  vim rs2.yml
   52  history
=====================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydep
  labels:
    app: cycle
spec:
  replicas: 7
  selector:
    matchLabels:
      app: cycle
  template:
    metadata:
      labels:
        app: cycle
    spec:
      containers:
        - name: cont1
          image: shammu101/game
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mysvc2
spec:
  type: NodePort
  selector:
    app: cycle
  ports:
    - port: 80
      targetPort: 80

=======================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-dep
  labels:
    place: dev
  namespace: dev-env
spec:
  replicas: 7
  selector:
    matchLabels:
      place: dev
  template:
    metadata:
      labels:
        place: dev
    spec:
      containers:
        - name: cont1
          image: shammu101/dm
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: dev-svc
  namespace: dev-env
spec:
  type: NodePort
  selector:
    place: dev
  ports:
    - port: 80
      targetPort: 80
============================================================================
root@vm:~# history
    1  apt update -y
    2  apt upgrade -y
    3  curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    4  sudo apt-get update
    5  sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
    6  sudo mkdir -p /etc/apt/keyrings
    7  curl -sLS https://packages.microsoft.com/keys/microsoft.asc |   gpg --dearmor | sudo tee /etc/apt/keyrings/microsoft.gpg > /dev/null
    8  sudo chmod go+r /etc/apt/keyrings/microsoft.gpg
    9  AZ_DIST=$(lsb_release -cs)
   10  echo "Types: deb
URIs: https://packages.microsoft.com/repos/azure-cli/
Suites: ${AZ_DIST}
Components: main
Architectures: $(dpkg --print-architecture)
Signed-by: /etc/apt/keyrings/microsoft.gpg" | sudo tee /etc/apt/sources.list.d/azure-cli.sources
   11  sudo apt-get update
   12  sudo apt-get install azure-cli
   13  sudo snap install kubectl --classic
   14  kubectl version --client
   15  az login
   16  az aks get-credentials --resource-group kops --name kops --overwrite-existing
   17  kubectl get po
   18  kubectl get rs
   19  vim rs.yaml
   20  kubectl create -f rs.yaml
   21  kubectl get rs
   22  kubectl get po
   23  kubectl get svc
   24  vim dep.yml
   25  kubectl create -f dep.yml
   26  vim dep.yml
   27  kubectl create -f dep.yml
   28  kubectl get deployment
   29  kubectl get rs
   30  kubectl get pods
   31  vim dep.yml
   32  kubectl apply -f dep.yml
   33  kubectl get svc
   34  kubectl get deployment
   35  kubectl set image deployment/mydep cont1=shammu101/game
   36  kubectl rollout history deployment/mydep
   37  kubectl rollout undo deployment/mydep --to-revision=1
   38  vim dep.yml
   39  kubectl apply -f dep.yml
   40  vim shammu.yaml
   41  kubectl create -f shammu.yaml
   42  kubectl get deployment
   43  kubectl get rs
   44  kubectl get po
   45  kubectl get ns
   46  kubectl get po -n kube-system
   47  kubectl get ns
   48  kubectl create ns dev-env
   49  kubectl get ns
   50  kubectl create ns test-env
   51  kubectl create ns prod-env
   52  kubectl get ns
   53  kubectl get po -n test-env
   54  kubectl get po -n dev-env
   55  kubectl get po -n prod-env
   56  vim dev.yml
   57  kubectl create -f dev.yml
   58  vim dev.yml
   59  kubectl create -f dev.yml
   60  vim dev.yml
   61  kubectl create -f dev.yml
   62  kubectl get deployment
   63  kubectl get deployment -n dev-env
   64  kubectl get rs -n dev-env
   65  kubectl get po -n dev-env
   66  ls
   67  vim dep.yml
   68  vim dev.yml
   69  kubectl apply -f dev.yml
   70  kubectl get svc
   71  kubectl get svc -n dev-en
   72  kubectl get svc -n dev-env
   73  vim dev.yml
   74  ll
   75  lls
   76  s
   77  ls
    79  kubectl get deployment
   80  kubectl delete deployment mydep3
   81  kubectl get deployment
   82  kubectl get rs
   83  kubectl get pods
84  history
========================================
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: mydaemon
  labels:
    app: game
spec:
  selector:
    matchLabels:
      app: game
  template:
    metadata:
      labels:
        app: game
    spec:
      containers:
        - name: cont1
          image: shammu101/game
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mydaemon
spec:
  type: LoadBalancer
  selector:
    app: game
  ports:
    - port: 80
      targetPort: 80
=====================================================


